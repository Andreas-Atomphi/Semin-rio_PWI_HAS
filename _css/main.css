@import url('https://fonts.googleapis.com/css?family=Questrial&display=swap');
@import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');
@font-face
{
  font-family: times-new-roman-14;
  src: url(_fnt/times-new-roman-14.ttf);
}
html, main
{
  margin: 0;
  width: 100%;
  overflow-x: hidden;
  height: auto;
  padding: 0;
}
.newspaper {
  /* Old Chrome, Safari and Opera */
  position: relative;
  background-color: #333;
  max-width: 100vw;
  min-height: 100%;
  padding: 10px;
  z-index: 2;
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
}
.newscontent {
  /* Old Chrome, Safari and Opera */
  color: white;
  background-color: #333;
  max-width: 100vw;
  position: relative;
  -webkit-column-count: 3;
  -webkit-column-gap: 40px;
}
.header
{
  position: fixed;
  perspective:0;
  z-index: 7;
  width: 100%;
}
h1{
  font-family: Questrial;
  font-size: 50px;
  text-align: left;
  margin: 0px;
}
h2
{
  color: #DDA500;
}
p
{
  font-family: Roboto;
  text-align: justify;
  margin: 2px 0px 15px 0px;
}
.bgcard
{
  margin: 0;
  right: 4px;
}
/*
.parallax {

  /* Full height
  height: 100%; 

  /* Create the parallax scrolling effect
  /*background-attachment: fixed;
  background-repeat: no-repeat;
  height: 100%;
  background-position: center;
  background-size: cover;
  position: relative;
  color: white;
  font-family: "Courier New", Courier, monospace;
  font-size: 25px;
}*/

.middle {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}
.wrapper {
  /* O elemento precisa ter uma altura definida para o efeito
  funcionar.
     100vh significa 100% da altura da view.
  */
  height: 100vh;

  /* O tamanho das imagens irá criar uma barra de rolagem 
  horizontal. Iremos desativar isso */
  overflow-x: hidden;

  /* A propriedade perspective indica a "distância" entre o 
  usuário e o plano Z.
  Quanto maior o valor, mais perto o elemento estará do usuário.
  Se for um valor negativo,
  mais distante esse elemento estará.
  */
  perspective: 2px;

  /* O transform-style indica se os elementos filhos devem ser 
  transformados em um plano 2D ou 3D.
  O valor preserve-3d indica que os elementos devem seguir o 
  espaço 3D indicado.
  */
  transform-style: preserve-3d;
}

.section {
  /* Indicamos "relative" para depois podermos
  posicionar os elementos filhos com "absolute" */
  position: relative;

  /* Indicamos uma altura para a nossa seção. O valor não 
  importa muito.
  Para garantir um bom efeito, coloquei também uma altura 
  mínima de 700px;
  */
  height: 100vh;
  min-height: 700px;

  /* Para manter a transformação em espaço 3D, indicamos o mesmo 
  valor do elemento pai (preserve-3d).
  Para não precisar repetir o valor "preserve-3d", você pode usar 
  o valor "inherit", que fará
  com que ele pegue o valor do elemento pai.
  */
  transform-style: inherit; 
}

.section::before {
  /* Aqui nós iremos configurar a imagem que irá aparecer no fundo
  da seção.
  Como vimos, o Parallax precisa de elementos diferentes, então 
  não daria certo se colocássemos o fundo diretamente na 
  <section>. Então criaremos um pseudo-elemento para isso.
  */

  /* Isso servirá para que o pseudo-elemento possua as mesmas
  dimensões do elemento <section> */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  /* O z-index negativo irá garantir que a imagem não fique por 
  cima de outros elementos */ 
  z-index: -1;

  /* Aqui estamos fazendo com que a imagem de fundo cubra todo o
  elemento */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;

  /* Aqui está a brincadeira. Lembra que o nosso "wrapper" está
  mais próximo do usuário?
  Aqui nós faremos com que o nosso pseudo-elemento, que está com
  a imagem de fundo, fique mais longe do usuário. Para isso, 
  basta passar um valor negativo para "translateZ()".

  Como a imagem irá para longe do usuário, ela parecerá menor. 
  Então usamos o "scale()" para aumentar o tamanho da imagem.

  Como o elemento estará mais longe do usuário, ele irá se mover
  mais lentamente do que os elementos mais próximos conforme 
  a gente role a página.
  */
  transform: translateZ(-1px) scale(1.5);
}
#card
{
  color: #FFFFFF;
}